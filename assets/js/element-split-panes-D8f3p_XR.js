import{a3 as e,N as n,K as a,W as i,o as t,a4 as s,n as l,a5 as o,k as u,a6 as r,p as v,q as d,c as m,H as c,a0 as p,a7 as z,a8 as h,O as f,b as x,w as S,v as P,u as g}from"./index-Brc5gCI7.js";const M={__name:"splitpanes",props:{horizontal:{type:Boolean,default:!1},pushOtherPanes:{type:Boolean,default:!0},maximizePanes:{type:Boolean,default:!0},rtl:{type:Boolean,default:!1},firstSplitter:{type:Boolean,default:!1}},emits:["ready","resize","resized","pane-click","pane-maximize","pane-add","pane-remove","splitter-click","splitter-dblclick"],setup(v,{emit:d}){const m=d,c=v,p=e(),z=n([]),x=a(()=>z.value.reduce((e,n)=>(e[~~n.id]=n)&&e,{})),S=a(()=>z.value.length),P=n(null),g=n(!1),M=n({mouseDown:!1,dragging:!1,activeSplitter:null,cursorOffset:0}),_=n({splitter:null,timeoutId:null}),y=a(()=>({["splitpanes splitpanes--"+(c.horizontal?"horizontal":"vertical")]:!0,"splitpanes--dragging":M.value.dragging})),w=(e,n)=>{const a=e.target.closest(".splitpanes__splitter");if(a){const{left:n,top:i}=a.getBoundingClientRect(),{clientX:t,clientY:s}="ontouchstart"in window&&e.touches?e.touches[0]:e;M.value.cursorOffset=c.horizontal?s-i:t-n}document.addEventListener("mousemove",k,{passive:!1}),document.addEventListener("mouseup",R),"ontouchstart"in window&&(document.addEventListener("touchmove",k,{passive:!1}),document.addEventListener("touchend",R)),M.value.mouseDown=!0,M.value.activeSplitter=n},k=e=>{M.value.mouseDown&&(e.preventDefault(),M.value.dragging=!0,requestAnimationFrame(()=>{b(N(e)),W("resize",{event:e},!0)}))},R=e=>{M.value.dragging&&(window.getSelection().removeAllRanges(),W("resized",{event:e},!0)),M.value.mouseDown=!1,M.value.activeSplitter=null,setTimeout(()=>{M.value.dragging=!1,document.removeEventListener("mousemove",k,{passive:!1}),document.removeEventListener("mouseup",R),"ontouchstart"in window&&(document.removeEventListener("touchmove",k,{passive:!1}),document.removeEventListener("touchend",R))},100)},E=(e,n)=>{if(W("splitter-dblclick",{event:e,index:n},!0),c.maximizePanes){let a=0;z.value=z.value.map((e,i)=>(e.size=i===n?e.max:e.min,i!==n&&(a+=e.min),e)),z.value[n].size-=a,W("pane-maximize",{event:e,index:n,pane:z.value[n]}),W("resized",{event:e,index:n},!0)}},N=e=>{const n=P.value.getBoundingClientRect(),{clientX:a,clientY:i}="ontouchstart"in window&&e.touches?e.touches[0]:e;return{x:a-(c.horizontal?0:M.value.cursorOffset)-n.left,y:i-(c.horizontal?M.value.cursorOffset:0)-n.top}},b=e=>{const n=M.value.activeSplitter;let a={prevPanesSize:O(n),nextPanesSize:B(n),prevReachedMinPanes:0,nextReachedMinPanes:0};const i=0+(c.pushOtherPanes?0:a.prevPanesSize),t=100-(c.pushOtherPanes?0:a.nextPanesSize),s=Math.max(Math.min((e=>{e=e[c.horizontal?"y":"x"];const n=P.value[c.horizontal?"clientHeight":"clientWidth"];return c.rtl&&!c.horizontal&&(e=n-e),100*e/n})(e),t),i);let l=[n,n+1],o=z.value[l[0]]||null,u=z.value[l[1]]||null;const r=o.max<100&&s>=o.max+a.prevPanesSize,v=u.max<100&&s<=100-(u.max+B(n+1));if(r||v)r?(o.size=o.max,u.size=Math.max(100-o.max-a.prevPanesSize-a.nextPanesSize,0)):(o.size=Math.max(100-u.max-a.prevPanesSize-B(n+1),0),u.size=u.max);else{if(c.pushOtherPanes){const e=L(a,s);if(!e)return;({sums:a,panesToResize:l}=e),o=z.value[l[0]]||null,u=z.value[l[1]]||null}null!==o&&(o.size=Math.min(Math.max(s-a.prevPanesSize-a.prevReachedMinPanes,o.min),o.max)),null!==u&&(u.size=Math.min(Math.max(100-s-a.nextPanesSize-a.nextReachedMinPanes,u.min),u.max))}},L=(e,n)=>{const a=M.value.activeSplitter,i=[a,a+1];return n<e.prevPanesSize+z.value[i[0]].min&&(i[0]=A(a).index,e.prevReachedMinPanes=0,i[0]<a&&z.value.forEach((n,t)=>{t>i[0]&&t<=a&&(n.size=n.min,e.prevReachedMinPanes+=n.min)}),e.prevPanesSize=O(i[0]),void 0===i[0])?(e.prevReachedMinPanes=0,z.value[0].size=z.value[0].min,z.value.forEach((n,i)=>{i>0&&i<=a&&(n.size=n.min,e.prevReachedMinPanes+=n.min)}),z.value[i[1]].size=100-e.prevReachedMinPanes-z.value[0].min-e.prevPanesSize-e.nextPanesSize,null):n>100-e.nextPanesSize-z.value[i[1]].min&&(i[1]=D(a).index,e.nextReachedMinPanes=0,i[1]>a+1&&z.value.forEach((n,t)=>{t>a&&t<i[1]&&(n.size=n.min,e.nextReachedMinPanes+=n.min)}),e.nextPanesSize=B(i[1]-1),void 0===i[1])?(e.nextReachedMinPanes=0,z.value.forEach((n,i)=>{i<S.value-1&&i>=a+1&&(n.size=n.min,e.nextReachedMinPanes+=n.min)}),z.value[i[0]].size=100-e.prevPanesSize-B(i[0]-1),null):{sums:e,panesToResize:i}},O=e=>z.value.reduce((n,a,i)=>n+(i<e?a.size:0),0),B=e=>z.value.reduce((n,a,i)=>n+(i>e+1?a.size:0),0),A=e=>[...z.value].reverse().find(n=>n.index<e&&n.size>n.min)||{},D=e=>z.value.find(n=>n.index>e+1&&n.size>n.min)||{},C=(e,n,a=!1)=>{const i=e-1,t=document.createElement("div");t.classList.add("splitpanes__splitter"),a||(t.onmousedown=e=>w(e,i),typeof window<"u"&&"ontouchstart"in window&&(t.ontouchstart=e=>w(e,i)),t.onclick=e=>((e,n)=>{"ontouchstart"in window&&(e.preventDefault(),_.value.splitter===n?(clearTimeout(_.value.timeoutId),_.value.timeoutId=null,E(e,n),_.value.splitter=null):(_.value.splitter=n,_.value.timeoutId=setTimeout(()=>_.value.splitter=null,500))),M.value.dragging||W("splitter-click",{event:e,index:n},!0)})(e,i+1)),t.ondblclick=e=>E(e,i+1),n.parentNode.insertBefore(t,n)},I=e=>{e.onmousedown=void 0,e.onclick=void 0,e.ondblclick=void 0,e.remove()},T=()=>{var e;const n=Array.from((null==(e=P.value)?void 0:e.children)||[]);for(const i of n)i.className.includes("splitpanes__splitter")&&I(i);let a=0;for(const i of n)i.className.includes("splitpanes__pane")&&(!a&&c.firstSplitter?C(a,i,!0):a&&C(a,i),a++)},$=(e={})=>{e.addedPane||e.removedPane?z.value.some(e=>null!==e.givenSize||e.min||e.max<100)?U(e):q():F(),g.value&&W("resized")},q=()=>{const e=100/S.value;let n=0;const a=[],i=[];for(const t of z.value)t.size=Math.max(Math.min(e,t.max),t.min),n-=t.size,t.size>=t.max&&a.push(t.id),t.size<=t.min&&i.push(t.id);n>.1&&j(n,a,i)},F=()=>{let e=100;const n=[],a=[];let i=0;for(const s of z.value)e-=s.size,null!==s.givenSize&&i++,s.size>=s.max&&n.push(s.id),s.size<=s.min&&a.push(s.id);let t=100;if(e>.1){for(const n of z.value)null===n.givenSize&&(n.size=Math.max(Math.min(e/(S.value-i),n.max),n.min)),t-=n.size;t>.1&&j(t,n,a)}},U=({addedPane:e,removedPane:n}={})=>{let a=100/S.value,i=0;const t=[],s=[];null!==((null==e?void 0:e.givenSize)??null)&&(a=(100-e.givenSize)/(S.value-1));for(const l of z.value)i-=l.size,l.size>=l.max&&t.push(l.id),l.size<=l.min&&s.push(l.id);if(!(Math.abs(i)<.1)){for(const n of z.value)null!==(null==e?void 0:e.givenSize)&&(null==e?void 0:e.id)===n.id||(n.size=Math.max(Math.min(a,n.max),n.min)),i-=n.size,n.size>=n.max&&t.push(n.id),n.size<=n.min&&s.push(n.id);i>.1&&j(i,t,s)}},j=(e,n,a)=>{let i;i=e>0?e/(S.value-n.length):e/(S.value-a.length),z.value.forEach((t,s)=>{if(e>0&&!n.includes(t.id)){const n=Math.max(Math.min(t.size+i,t.max),t.min),a=n-t.size;e-=a,t.size=n}else if(!a.includes(t.id)){const n=Math.max(Math.min(t.size+i,t.max),t.min),a=n-t.size;e-=a,t.size=n}}),Math.abs(e)>.1&&f(()=>{g.value})},W=(e,n=void 0,a=!1)=>{const i=(null==n?void 0:n.index)??M.value.activeSplitter??null;m(e,{...n,...null!==i&&{index:i},...a&&null!==i&&{prevPane:z.value[i-(c.firstSplitter?1:0)],nextPane:z.value[i+(c.firstSplitter?0:1)]},panes:z.value.map(e=>({min:e.min,max:e.max,size:e.size}))})};i(()=>c.firstSplitter,()=>T()),t(()=>{(()=>{var e;const n=Array.from((null==(e=P.value)?void 0:e.children)||[]);for(const a of n){const e=a.classList.contains("splitpanes__pane"),n=a.classList.contains("splitpanes__splitter");!e&&!n&&a.remove()}})(),T(),$(),W("ready"),g.value=!0}),s(()=>g.value=!1);const H=()=>{var e;return h("div",{ref:P,class:y.value},null==(e=p.default)?void 0:e.call(p))};return o("panes",z),o("indexedPanes",x),o("horizontal",a(()=>c.horizontal)),o("requestUpdate",({uid:e,...n})=>{const a=x.value[e];for(const[i,t]of Object.entries(n))a[i]=t}),o("onPaneAdd",e=>{var n;let a=-1;Array.from((null==(n=P.value)?void 0:n.children)||[]).some(n=>(n.className.includes("splitpanes__pane")&&a++,n.isSameNode(e.el))),z.value.splice(a,0,{...e,index:a}),z.value.forEach((e,n)=>e.index=n),g.value&&f(()=>{T(),$({addedPane:z.value[a]}),W("pane-add",{pane:z.value[a]})})}),o("onPaneRemove",e=>{const n=z.value.findIndex(n=>n.id===e);z.value[n].el=null;const a=z.value.splice(n,1)[0];z.value.forEach((e,n)=>e.index=n),f(()=>{T(),W("pane-remove",{pane:a}),$({removedPane:{...a}})})}),o("onPaneClick",(e,n)=>{W("pane-click",{event:e,index:x.value[n].index,pane:x.value[n]})}),(e,n)=>(u(),l(r(H)))}},_={__name:"pane",props:{size:{type:[Number,String]},minSize:{type:[Number,String],default:0},maxSize:{type:[Number,String],default:100}},setup(e){var l;const o=e,r=v("requestUpdate"),h=v("onPaneAdd"),f=v("horizontal"),x=v("onPaneRemove"),S=v("onPaneClick"),P=null==(l=d())?void 0:l.uid,g=v("indexedPanes"),M=a(()=>g.value[P]),_=n(null),y=a(()=>{const e=isNaN(o.size)||void 0===o.size?0:parseFloat(o.size);return Math.max(Math.min(e,k.value),w.value)}),w=a(()=>{const e=parseFloat(o.minSize);return isNaN(e)?0:e}),k=a(()=>{const e=parseFloat(o.maxSize);return isNaN(e)?100:e}),R=a(()=>{var e;return`${f.value?"height":"width"}: ${null==(e=M.value)?void 0:e.size}%`});return i(()=>y.value,e=>r({uid:P,size:e})),i(()=>w.value,e=>r({uid:P,min:e})),i(()=>k.value,e=>r({uid:P,max:e})),t(()=>{h({id:P,el:_.value,min:w.value,max:k.value,givenSize:void 0===o.size?null:y.value,size:y.value})}),s(()=>x(P)),(e,n)=>(u(),m("div",{ref_key:"paneEl",ref:_,class:"splitpanes__pane",onClick:n[0]||(n[0]=n=>z(S)(n,e._.uid)),style:p(R.value)},[c(e.$slots,"default")],4))}};const y=x({__name:"element-split-panes",props:{className:{type:String,default:""},horizontal:{type:Boolean,default:!1},leftSize:{type:Number,default:50}},emits:["resize"],setup(n,{expose:a,emit:i}){a();const t={slots:e(),uuid:g.generateUuid(),emit:i,useSlots:e,get Pane(){return _},get Splitpanes(){return M},get utils(){return g}};return Object.defineProperty(t,"__isScriptSetup",{enumerable:!1,value:!0}),t}},[["render",function(e,n,a,i,t,s){return u(),l(i.Splitpanes,{key:i.uuid,class:"element-splitpanes",horizontal:a.horizontal,onResize:n[0]||(n[0]=e=>i.emit("resize"))},{default:S(()=>[i.slots.leftSlot?(u(),l(i.Pane,{key:0,size:a.leftSize},{default:S(()=>[c(e.$slots,"leftSlot")]),_:3},8,["size"])):P("",!0),i.slots.rightSlot?(u(),l(i.Pane,{key:1},{default:S(()=>[c(e.$slots,"rightSlot")]),_:3})):P("",!0)]),_:3},8,["horizontal"])}],["__file","/Users/kokimin/WorkSpace/vue_design_system/src/components/display/element-split-panes.vue"]]);export{y as E};
